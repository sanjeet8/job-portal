version: "3.9"

services:
  auth-service:
    build:
      context: ./auth-service
    ports:
      - "8001:8001"
    volumes:
      - ./auth-service:/app
    restart: always
    depends_on:
      - postgres
    networks:
      - backend
    environment:   # âœ… Add database env vars for auth-service
      POSTGRES_USER: sanjeet
      POSTGRES_PASSWORD: sanjeet123
      POSTGRES_DB: auth_db
      POSTGRES_HOST: postgres   # ðŸ”¥ This must match the service name
      POSTGRES_PORT: 5432

  job-service:
    build:
      context: ./job-service
    ports:
      - "8002:8002"
    volumes:
      - ./job-service:/app
    depends_on:
      - auth-service
    restart: always
    networks:
      - backend

  notification-service:
    build:
      context: ./notification-service
    ports:
      - "8003:8003"
    volumes:
      - ./notification-service:/app
    depends_on:
      - redis
    restart: always
    networks:
      - backend

  notification-worker:
    build:
      context: ./notification-service
    command: celery -A app.tasks worker --loglevel=info
    volumes:
      - ./notification-service:/app
    depends_on:
      - redis
    restart: always
    networks:
      - backend

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: always
    networks:
      - backend

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - auth-service
      - job-service
      - notification-service
    restart: always
    networks:
      - backend

  postgres:
    image: postgres:14
    # âœ… DO NOT set container_name here unless necessary; keep default
    environment:
      POSTGRES_USER: sanjeet
      POSTGRES_PASSWORD: sanjeet123
      POSTGRES_DB: auth_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
